name: Deploy

on:
  push:
    branches:
      - '**'
    # tags:
    #   - 'v*.*.*'
    #   - 'v*.*.*-*'
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Change to your region

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - run: docker build -t nodejs-demo .

      - name: Build and Push Docker Image to ECR
        env:
          ECR_REPOSITORY: workspace/nodejs-demo # Replace with your ECR repo name
        run: |
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY}:${{ github.ref_name }}"
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: task-definition.json # Path to your task definition
          service: your-service-name # Replace with your ECS service name
          cluster: your-cluster-name # Replace with your ECS cluster name
          image: ${{ steps.login-ecr.outputs.registry }}/your-ecr-repo-name:latest

      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Build and Push Docker Image
      #   run: |
      #     docker build -t your-image-name:${{ github.event.release.tag_name }} .
      #     docker tag your-image-name:${{ github.event.release.tag_name }} your-dockerhub-repo/your-image-name:${{ github.event.release.tag_name }}
      #     docker push your-dockerhub-repo/your-image-name:${{ github.event.release.tag_name }}