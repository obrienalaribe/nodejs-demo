name: CI Pipeline

on:
  push:
    branches-ignore:
      - "**" # Trigger lint and formatting on feature branches
  pull_request:
    branches:
      - main # Run build checks on PRs to main

# read
permissions:
  id-token: write
  contents: read
  
jobs:
  format:
    if: startsWith(github.ref, 'refs/heads/feature/') # Only run on feature branches
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Check code formatting
        run: npm run format

  build-on-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm ci

      - name: Install dependencies
        run: npm ci

      - name: Software composition analysis (dependency vulnerability audit)
        run: npm audit 

      - name: Static Application Security Testing 
        run: echo "scan sourcecode for security issues (sonarqube)"

      - name: E2E Testing
        run: echo "run tests"

# ready for QA deploy/testing

      #     # Create and push the new tag
      #     git tag $NEW_TAG
      #     git push origin $NEW_TAG

  #   - name: Setup upterm session
  #     uses: lhotari/action-upterm@v1
  #     if: ${{ failure() }}
  #     with:
  #       wait-timeout-minutes: 2

  notify-on-failure:
    needs: [format, build-on-pr]
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Notify failure
        run: |
          echo "Push notification to slack"
